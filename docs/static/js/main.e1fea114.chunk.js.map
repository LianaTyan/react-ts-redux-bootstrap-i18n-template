{"version":3,"sources":["store/Counter.ts","store/EventsStore.ts","i18n/i18n.ts","components/NavMenu.tsx","components/GoToTop.tsx","components/Layout.tsx","components/Home.tsx","components/RestCallDemo.tsx","components/About.tsx","App.tsx","serviceWorker.ts","index.tsx","store/configureStore.ts","assets/img/react_icon.png","assets/img/bitcoin_icon.png"],"names":["initialState","count","reducer","state","action","type","events","isLoading","actionCreators","requestEvents","dayIndex","dispatch","getState","a","opts","headers","fetch","response","json","data","translationResources","en","translations","de","i18n","use","XHR","LanguageDetector","initReactI18next","init","resources","lng","fallbackLng","keySeparator","interpolation","escapeValue","ns","defaultNS","NavMenu","props","toggle","bind","isOpen","this","setState","t","changeLanguage","language","Navbar","className","dark","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","NavItem","NavLink","icon","faHome","faGlobe","faInfoCircle","e","React","Component","withTranslation","GoToTop","intervalId","thePosition","scrollStepInPx","delayInMs","document","addEventListener","window","scrollY","scrollTo","scroll","Fragment","scrollToTop","faChevronUp","connect","GreyLineBottom","style","position","left","height","width","border","margin","zIndex","bottom","Layout","children","useTranslation","src","reactIconImage","alt","href","title","faGithub","RestCallDemo","ensureDataFetched","map","n","key","screenshot","startsWith","placeHolderImage","url","target","website","role","faCalendarAlt","format","date","start_date","renderCards","bindActionCreators","App","exact","path","component","Home","About","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","baseUrl","getElementsByTagName","getAttribute","undefined","history","createBrowserHistory","basename","store","reducers","counter","Counter","EventsStore","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","router","connectRouter","createStore","compose","applyMiddleware","configureStore","initialReduxState","rootElement","getElementById","ReactDOM","render","URL","process","origin","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.e1fea114.chunk.js","sourcesContent":["import {AnyAction} from \"redux\";\r\n\r\nconst incrementCountType = 'INCREMENT_COUNT';\r\nconst decrementCountType = 'DECREMENT_COUNT';\r\nconst initialState = {count: 0};\r\n\r\nexport const actionCreators = {\r\n    increment: () => ({type: incrementCountType}),\r\n    decrement: () => ({type: decrementCountType})\r\n};\r\n\r\nexport const reducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n        case incrementCountType:\r\n            return {...state, count: state.count + 1};\r\n        case decrementCountType:\r\n            return {...state, count: state.count - 1};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { AnyAction, Dispatch } from \"redux\";\r\n\r\nconst requestEventsType = 'REQUEST_EVENTS';\r\nconst receiveEventsType = 'RECEIVE_EVENTS';\r\nconst initialState = { events: [], isLoading: false };\r\n\r\nexport const actionCreators = {\r\n    //TODO replace generic with proper typing\r\n    requestEvents: (dayIndex: number) => async (dispatch: Dispatch, getState: () => any) => {\r\n\r\n        var opts = {\r\n            //mode: 'no-cors' as RequestMode,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                //'Authorization': 'Bearer ' + token                        \r\n            }\r\n        }\r\n\r\n        if (dayIndex === getState().events.dayIndex) {\r\n            // Don't issue a duplicate request (we already have or are loading the requested data)\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: requestEventsType, dayIndex });\r\n\r\n        const url = \"https://api.coingecko.com/api/v3/events\";\r\n\r\n\r\n        const response = await fetch(url, opts);\r\n        const events = await response.json();\r\n        // console.log(events);\r\n\r\n        dispatch({ type: receiveEventsType, dayIndex, events });\r\n    }\r\n};\r\n\r\nexport const reducer = (state = initialState, action: AnyAction) => {\r\n\r\n    switch (action.type) {\r\n        case requestEventsType:\r\n            return {\r\n                ...state,\r\n                dayIndex: action.dayIndex,\r\n                isLoading: true\r\n            };\r\n        case receiveEventsType:\r\n            return {\r\n                ...state,\r\n                dayIndex: action.dayIndex,\r\n                events: action.events.data,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport XHR from \"i18next-xhr-backend\";\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nimport translationEn from \"./en/translation.json\";\nimport translationDe from \"./de/translation.json\";\n\n// the translations\nconst translationResources = {\n    en: {\n        translations: translationEn\n    },\n    de: {\n        translations: translationDe\n    }\n};\n\ni18n\n    // load translation using xhr\n    .use(XHR)\n    // detect user language\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    .init({\n        resources: translationResources,\n        lng: \"en\",\n        fallbackLng: \"en\",\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        },\n        // have a common namespace used around the full app\n        ns: [\"translations\"],\n        defaultNS: \"translations\"\n    });\n\nexport default i18n;","import React from 'react';\r\nimport {\r\n    Collapse, Container, Navbar,\r\n    NavbarBrand, NavbarToggler,\r\n    NavItem, NavLink\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './NavMenu.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass NavMenu extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    render() {\r\n        const { t, i18n  } = this.props;\r\n        const changeLanguage = (language: string) => i18n.changeLanguage(language);\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-dark bg-dark navbar-toggleable-sm border-bottom box-shadow mb-3\" dark >\r\n                    <Container>\r\n                        <NavbarBrand tag={Link} to=\"/\">React TypeScript</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} className=\"mr-2\" />\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={this.state.isOpen} navbar>\r\n                            <ul className=\"navbar-nav flex-grow\">\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-light\" to=\"/\"><FontAwesomeIcon icon={faHome} /> {t(\"menuHome\")}</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-light\" to=\"/RestCall\"><FontAwesomeIcon icon={faGlobe} /> {t(\"menuRestCall\")}</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-light\" to=\"/About\"><FontAwesomeIcon icon={faInfoCircle} /> {t(\"menuAbout\")}</NavLink>\r\n                                </NavItem>\r\n                                <form className=\"form-inline\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" type=\"button\" onClick={e => changeLanguage(\"de\")}>\r\n                                        <span className=\"flag-icon flag-icon-de\"></span>\r\n                                    </button>\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" type=\"button\" onClick={e => changeLanguage(\"en\")}>\r\n                                        <span className=\"flag-icon flag-icon-gb\"></span>\r\n                                    </button>\r\n                                </form>\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NavMenu);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './GoToTop.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass GoToTop extends Component<any> {\r\n\r\n  state = {\r\n    intervalId: 0,\r\n    thePosition: false,\r\n    scrollStepInPx: 50,\r\n    delayInMs: 30\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"scroll\", () => {\r\n      // console.log(\"scroll: \" + window.scrollY);\r\n      if (window.scrollY > 170) {\r\n        this.setState({ thePosition: true })\r\n      } else {\r\n        this.setState({ thePosition: false })\r\n      }\r\n    });\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  scrollToTop() {\r\n    window.scroll(0, 0);\r\n    // let intervalId = setInterval(this.onScrollStep(), this.state.delayInMs);\r\n    // this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          this.state.thePosition &&\r\n          <div className=\"go-to-top\" onClick={this.scrollToTop}>\r\n          <FontAwesomeIcon icon={faChevronUp} />\r\n        </div>\r\n        }\r\n      </React.Fragment>)\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: any) => state\r\n)(GoToTop);","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu';\r\nimport GoToTop from './GoToTop';\r\nimport './Layout.css';\r\n\r\nconst GreyLineBottom = () => (\r\n    <hr\r\n        style={{\r\n            position: \"fixed\",\r\n            left: 0,\r\n            height: 0,\r\n            width: \"100%\",\r\n            border: \"2px solid grey\",\r\n            margin: 0,\r\n            zIndex: 1030,\r\n            bottom: 0\r\n        }}\r\n    />\r\n);\r\n\r\nconst Layout = (props: any) => (\r\n    <>\r\n        <div>\r\n            <NavMenu />\r\n            <Container>\r\n                {props.children}\r\n                <footer>\r\n                    <div className=\"float-left\">\r\n                        <br />\r\n                        &copy; 2019 - MoWeTec\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                </footer>\r\n            </Container>\r\n        </div>\r\n        <GreyLineBottom />\r\n        <GoToTop />\r\n    </>\r\n);\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport reactIconImage from '../assets/img/react_icon.png';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Home = (props: any) => {\r\n\r\n    const { t } = useTranslation();\r\n    //const changeLanguage = (language: string) => i18n.changeLanguage(language);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h2>{t(\"titleHome\")}</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    React TypeScript Demo\r\n                    <br />\r\n                    <br />\r\n                    <h4>{t(\"withWordBig\")} Redux</h4>\r\n                    <h4>... Bootstrap</h4>\r\n                    <h4>... Font Awesome</h4>\r\n                    <h4>... Internationalization (i18n)</h4>\r\n                    <h4>... REST Call Demo</h4>\r\n                    <h4>... etc.</h4>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <img src={reactIconImage} className=\"card-img-top\" alt=\"Icon\"></img>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h2>{t(\"MoreInfo\")}</h2>\r\n                    <a href=\"https://github.com/rich-info\" title=\"\"><FontAwesomeIcon icon={faGithub} /> Github</a><br />\r\n                    <a href=\"https://github.com/rich-info/react-ts-redux-bootstrap-i18n-template\" title=\"\"><FontAwesomeIcon icon={faGithub} /> Github</a><br />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect()(Home);","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { actionCreators } from '../store/EventsStore';\r\nimport placeHolderImage from '../assets/img/bitcoin_icon.png';\r\n\r\nimport Moment from 'react-moment';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass RestCallDemo extends Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        // This method is called when the component is first added to the document\r\n        this.ensureDataFetched();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // This method is called when the route parameters change\r\n        this.ensureDataFetched();\r\n    }\r\n\r\n    ensureDataFetched() {\r\n        //const dayIndex = parseInt(this.props.match.params.dayIndex) || 0;\r\n        const dayIndex = 1;\r\n        this.props.requestEvents(dayIndex);\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h2>{t(\"titleRestCall\")}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        API: https://api.coingecko.com/api/v3/events <br />\r\n                        <br />\r\n                        {renderCards(this.props)}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction renderCards(props: any) {\r\n    const { t } = props;\r\n    return (\r\n        <div className=\"card-columns\">\r\n            {props.events.map((n: any, key: any) =>\r\n                <div key={key}>\r\n                    <div className=\"card\">\r\n                        {n.screenshot.startsWith(\"http\") &&\r\n                            \r\n                            <img src={n.screenshot} className=\"card-img-top\" alt=\"Event Icon\" ></img>\r\n                            \r\n                        }\r\n                        {!n.screenshot.startsWith(\"http\") &&\r\n                            \r\n                            <img src={placeHolderImage} className=\"card-img-top\" alt=\"Event Icon\" ></img>\r\n                            \r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{n.title}</h5>\r\n                            <div className=\"card-text\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {n.url}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <a className=\"btn btn-outline-primary\" target=\"_blank\"\r\n                                            href={n.website} role=\"button\">{t(\"MoreWordBig\")}...</a>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm center-block\">\r\n                                        <small className=\"text-muted\">\r\n                                            <FontAwesomeIcon icon={faCalendarAlt} /> <Moment format=\"DD.MM.YYYY\" date={n.start_date} />\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    (state: any) => state.events,\r\n    dispatch => bindActionCreators(actionCreators, dispatch)\r\n)(withTranslation()(RestCallDemo));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport reactIconImage from '../assets/img/react_icon.png';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst About = (props: any) => {\r\n\r\n  const { t } = useTranslation();\r\n  //const changeLanguage = (language: string) => i18n.changeLanguage(language);\r\n\r\n  return (\r\n    <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h2>{t(\"titleAbout\")}</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    React TypeScript Demo\r\n                    <br />\r\n                    <br />\r\n                    <h4>{t(\"withWordBig\")} Redux</h4>\r\n                    <h4>... Bootstrap</h4>\r\n                    <h4>... Font Awesome</h4>\r\n                    <h4>... Internationalization (i18n)</h4>\r\n                    <h4>... REST Call Demo</h4>\r\n                    <h4>... etc.</h4>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <img src={reactIconImage} className=\"card-img-top\" alt=\"Icon\"></img>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h2>{t(\"MoreInfo\")}</h2>\r\n                    <a href=\"https://github.com/rich-info\" title=\"\"><FontAwesomeIcon icon={faGithub} /> Github</a><br />\r\n                    <a href=\"https://github.com/rich-info/react-ts-redux-bootstrap-i18n-template\" title=\"\"><FontAwesomeIcon icon={faGithub} /> Github</a><br />\r\n                </div>\r\n            </div>\r\n        </>\r\n  );\r\n};\r\n\r\nexport default connect()(About);\r\n","import React from 'react';\nimport { Route } from 'react-router';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport RestCallDemo from './components/RestCallDemo';\nimport About from './components/About';\nimport './App.css';\n\nconst App = () => (\n  <Layout>\n    <Route exact path='/' component={Home} />\n    <Route path='/Home/:dayIndex?' component={Home} />\n    <Route path='/RestCall/:currency?' component={RestCallDemo} />\n    <Route path='/About' component={About} />\n  </Layout>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { ConnectedRouter } from 'react-router-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStore';\nimport './index.css';\nimport \"./i18n/i18n\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Create browser history to use in the Redux store\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') || undefined;\nconst history = createBrowserHistory({ basename: baseUrl });\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst initialState = (window as any).initialReduxState;\nconst store = configureStore(history, initialState);\n//const store = configureStore();\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store as any}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    rootElement);\nserviceWorker.register();","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport * as Counter from './Counter';\r\n// import * as WeatherForecasts from './WeatherForecasts';\r\nimport * as EventsStore from './EventsStore';\r\n\r\n\r\n//TODO fix history\r\nexport default function configureStore(history: any, initialState: object) {\r\n    const reducers = {\r\n        counter: Counter.reducer,\r\n        events: EventsStore.reducer\r\n    };\r\n\r\n    const middleware = [\r\n        thunk,\r\n        routerMiddleware(history)\r\n    ];\r\n\r\n    // In development, use the browser's Redux dev tools extension if installed\r\n    const enhancers = [];\r\n    const isDevelopment = process.env.NODE_ENV === 'development';\r\n    if (isDevelopment && typeof window !== 'undefined' && (window as any).devToolsExtension) {\r\n        enhancers.push((window as any).devToolsExtension());\r\n    }\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        //routing: routerReducer\r\n        router: connectRouter(history),\r\n    });\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}","module.exports = __webpack_public_path__ + \"static/media/react_icon.638be909.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin_icon.e76046a2.png\";"],"sourceRoot":""}